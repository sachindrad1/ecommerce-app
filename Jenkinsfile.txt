pipeline {
agent any
environment {
FRONTEND_IMAGE = 'admin1881/node:16 AS build';
BACKEND_IMAGE = 'admin1881/python:3.9-slim';
}
stages {
stage('Checkout') {
steps {
// Checkout the code from the Git repository
checkout scm
}
}
stage('Build Frontend') {
steps {
script {
// Build the frontend Docker image
sh 'docker build -t $FRONTEND_IMAGE ./frontend'
}
}
}
stage('Build Backend') {
steps {
script {
// Build the backend Docker image
sh 'docker build -t $BACKEND_IMAGE ./backend';
}
}
}
stage('Test Frontend') {
steps {
script {
// Run unit tests for frontend (assuming Jest)
sh 'cd frontend && npm test';
}
}
}
stage('Test Backend') {

steps {
script {
// Run unit tests for backend (assuming pytest)
sh 'cd backend && pytest';
}
}
}
stage('Push Docker Images' {
steps {
script {
// Push Docker images to the Docker registry (e.g.,
Docker Hub or AWS ECR)
sh 'docker push $FRONTEND_IMAGE'
sh 'docker push $BACKEND_IMAGE'
}
}
}
stage('Deploy') {
steps {
script {
// Deploy using Docker Compose or Kubernetes, etc.
sh 'docker-compose -f docker-compose.yml up -d';
}
}
}
stage('Cleanup') {
steps {
script {
// Remove the Docker images after deployment
sh 'docker rmi $FRONTEND_IMAGE $BACKEND_IMAGE'
}
}
}
}
post {
success {
echo 'Deployment succeeded!'
}
failure {
echo 'Deployment failed!'
}
}
}
